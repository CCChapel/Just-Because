/*------------------------------------*\
$MIXINS
\*------------------------------------*/
//@mixin font-size($font-size, $unit: "em"){
//    @if $unit == "em" {
//        $new-font-size: ($font-size / $base-font-size)*1em;
//        $new-line-height: min( (($base-line-height / $font-size)*1em), 1.5em);
//        
//        font-size: $new-font-size;
//        line-height: $new-line-height;
//        
//        @include grid-media-query("portable") {
//            line-height: max(($new-font-size / 2em) * 1.333) * $new-line-height;
//        }
//    }
//    @else {
//        font-size: ($font-size / $base-font-size)*1rem;
//        line-height: min( (($base-line-height / $font-size)*1rem), 1.5rem);
//    }
////} 
//
//@mixin display-flex {
//    display: -webkit-box;      // OLD - iOS 6-, Safari 3.1-6
//    display: -moz-box;         // OLD - Firefox 19- (buggy but mostly works)
//    display: -ms-flexbox;      // TWEENER - IE 10
//    display: -webkit-flex;     // NEW - Chrome
//    display: flex;             // NEW, Spec - Opera 12.1, Firefox 20+
//}
//
//@mixin display-inline-flex {
//    display: -webkit-inline-flex;
//    display: -ms-inline-flexbox;
//    display: inline-flex;
//}
//
//@mixin backwards-flex($property, $value) {
//    -webkit-#{$property}: $value;      // OLD - iOS 6-, Safari 3.1-6
//    -moz-#{$property}: $value;         // OLD - Firefox 19-
//    //width: 20%;                         /* For old syntax, otherwise collapses. */
//    -webkit-#{$property}: $value;      // Chrome
//    -ms-#{$property}: $value;          // IE 10 
//    #{$property}: $value;              // NEW, Spec - Opera 12.1, Firefox 20+ 
//}


/**
* Define your breakpoints. The first value is the prefix that shall be used for
* your classes (e.g. `.palm--one-half`), the second value is the media query
* that the breakpoint fires at.
*/
$breakpoints: (
    'palm' '(max-width: 480px)',
    'lap' '(min-width: 481px) and (max-width: 1023px)',
    'portable' '(max-width: 1023px)',
    'desk' '(min-width: 1024px)'
)!default;

/**
* These mixins are for the library to use only, you should not need to modify
* them at all.
*
* Enclose a block of code with a media query as named in `$breakpoints`.
*/
@mixin grid-media-query($media-query){
    $breakpoint-found: false;

    @each $breakpoint in $breakpoints{
        $name: nth($breakpoint, 1);
        $declaration: nth($breakpoint, 2);

        @if $media-query == $name and $declaration{
            $breakpoint-found: true;

            @media only screen and #{$declaration}{
                @content;
            }
        }
    }

    @if $breakpoint-found == false{
        @warn "Breakpoint ‘#{$media-query}’ does not exist"
    }
}